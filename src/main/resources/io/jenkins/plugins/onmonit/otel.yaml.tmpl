receivers:
  prometheus/ci:
    config:
      scrape_configs:
        - job_name: 'otl-col-ci'
          scrape_interval: 15s
          static_configs:
            - targets: ['localhost:[[${nePort}]]']
exporters:
  debug:
    verbosity: detailed
  otlp:
    endpoint: "[[${otlpEndpoint}]]"
    [(${otlpAuthHeaderBefore})][[${otlpAuthHeader}]][(${otlpAuthHeaderAfter})]

processors:
  resourcedetection:
    detectors:
    - system
    - ec2
  resource/ci:
    attributes:
    - action: insert
      # not yet defined in Otel SemConv
      key: cicd.controller.url
      value: "[[${JENKINS_URL}]]"
    - action: insert
      key: cicd.pipeline.name
      value: "[[${jobName}]]"
    - action: insert
      # not yet defined in Otel SemConv
      key: cicd.group.name
      value: "[[${jobGroupName}]]"
    - action: insert
      key: cicd.pipeline.run.id
      value: "[[${env.BUILD_ID}]]"
    - action: insert
      key: service.name
      value: "[[${serviceName}]]"
  transform/ci:
    metric_statements:
    - context: resource
      statements:
      - set(attributes["cicd.worker.id"], Concat([attributes["host.name"], "[[${nePort}]]"], ":"))
  batch:
    send_batch_size: 10000
    timeout: 10s

service:
  telemetry:
    metrics:
      level: none
  pipelines:
    metrics:
      receivers: [prometheus/ci]
      processors: [resourcedetection, transform/ci, resource/ci] # [batch, resourcedetection]
      exporters: [otlp, debug]
